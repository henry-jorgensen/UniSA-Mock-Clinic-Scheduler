@model UniSA_Radiation_Therapy_Mock_Clinic_Scheduler.Models.AppointmentModel
@{
    ViewData["Title"] = "Clinics";
    ViewData["Controller"] = "Coordinator";
    Dictionary<string, Dictionary<ScheduleModel, List<AppointmentModel>>> classes = ViewBag.Classes;
}

@*TODO Move these later*@
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

<script src="~/js/classes/AJAXManager.js"></script>

<div class="col">
    <div role="main" class="pb-lg-5">
        <div class="row d-flex justify-content-center">
            <div class="col-lg-12">
                <div class="text-center">
                    <h2>Upcoming Clinics</h2>
                </div>

                @*Organise by class then under each class have the clinics*@
                @if(classes != null)
                {
                    @*Loop through each class in the supplied dictionary*@
                    @foreach(var singleClass in classes)
                    {
                        <div class="card w-100">
                            <div class="card-header">
                                <h3>@singleClass.Key</h3>
                            </div>

                            <div class="accordion" id="@singleClass.Key">
                                @*If there are no entries yet display something*@
                                @if (@singleClass.Value.Count == 0)
                                {
                                    <div class="card w-100">
                                        <div class="card-header">
                                            <h5 class="mb-0 float-left">
                                                No Schedules Yet
                                            </h5>
                                        </div>
                                    </div>
                                }

                                @*Loop through each schedule in the supplied dictionary*@
                                @foreach (KeyValuePair<ScheduleModel, List<AppointmentModel>> schedule in singleClass.Value)
                                {
                                    @*Schedule details here*@
                                    <div class="card w-100">

                                        @*Header*@
                                        <div class="card-header">
                                            <h2 class="mb-0 float-left">
                                                <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#@schedule.Key.ScheduleCode" aria-expanded="true" aria-controls="@schedule.Key.ScheduleCode">
                                                    @schedule.Key.Name
                                                </button>
                                            </h2>

                                            <div class="float-right">
                                                <button class="classButton">
                                                     @Html.ActionLink("Edit", "EditClinic", "Coordinator", 
                                                        new { 
                                                            name = @schedule.Key.Name,
                                                            date = @schedule.Key.Date,
                                                            code = @schedule.Key.ScheduleCode,
                                                            startTime = @schedule.Key.StartTime,
                                                            duration = @schedule.Key.AppointmentDuration,
                                                            locations = @schedule.Key.Locations
                                                        }, 
                                                     new { @class="anchorClassEdit" })
                                                </button>

                                                <button onclick=deleteClass(this) value="@schedule.Key.ScheduleCode:@singleClass.Key" class="classButton">
                                                    Delete
                                                </button>
                                            </div>
                                        </div>


                                        <div id="@schedule.Key.ScheduleCode" class="collapse" aria-labelledby="@schedule.Key.ScheduleCode" data-parent="#@singleClass.Key">
                                            <div class="card-body">
                                                <table class="table table-hover table-striped">
                                                    <thead>
                                                        <tr>
                                                            <th scope="col">Date and Time</th>
                                                            <th scope="col">Patient</th>
                                                            <th scope="col">Infectious</th>
                                                            <th scope="col">Radiation Therapist 1</th>
                                                            <th scope="col">Radiation Therapist 2</th>
                                                            <th scope="col">Room</th>
                                                            <th scope="col">Site</th>
                                                            <th scope="col">Complication</th>
                                                            <th scope="col">Email</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @*Loop through each appointment in the supplied dictionary*@
                                                        @foreach (var appointment in schedule.Value)
                                                        {
                                                            var tempPat = appointment.Patient.Split(':');
                                                            var tempInfect = appointment.Infectious.Split(':');

                                                            var complication = "No";
												            var compDetails = "None";
												            @if(appointment.Complication != null) {
													            complication = "Yes";
													            compDetails = appointment.Complication;
												            }
                                                            
                                                            <tr id="@appointment.Date" class="studentEntry">
                                                                <th scope="col">@appointment.Date  @appointment.Time</th>
                                                                <th id="@tempPat[1]">@tempPat[0]</th>
                                                                <th class="infectionColumn" data-value="@tempInfect[1]">@tempInfect[0]</th>
                                                                <th>@appointment.RadiationTherapist1</th>
                                                                <th>@appointment.RadiationTherapist2</th>
                                                                <th>@appointment.Room</th>
                                                                <th>@appointment.Site</th>
                                                                <th data-value="@compDetails" class="mb-0 complicationColumn">@complication</th>
                                                                <th>
                                                                    @if(@appointment.Emailed) {
                                                                        <button onclick=alreadyEmailedPatient(this) value="@appointment.AppointmentRef" class="emailCompleteButton emailSingle">
                                                                            Email
                                                                        </button>
                                                                    } else {
                                                                        <button onclick=emailPatient(this) value="@appointment.AppointmentRef" class="emailButton emailSingle">
                                                                            Email
                                                                        </button>
                                                                    }
                                                                </th>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                            <div class="card-footer text-right">
                                                <button onclick=emailAllPatients(this) value="@schedule.Key.ScheduleCode" class="emailButton emailAll">
                                                    Email All Patients
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <br />
                    }
                }
            </div>
        </div>
    </div>

    <!-- The Modal -->
    <div id="infectionModal" class="modal">
        <!-- Modal content -->
        <div class="modal-content infectious modal-infectious">
            <div>
                <h2 style="float:left;">WARNING</h2>
                <span id="closeButton" class="close">&times;</span>
            </div>
            <br />
            <div class="form-group">
                <div class="form-row">
                    <div class="col-md-6 mb-3">
                        <label for="modalInfectionTitle">Infection</label>
                        <input disabled type="text" class="form-control input" id="modalInfectionTitle" placeholder="COVID-19.." required>
                    </div>
                </div>      
                <div class="form-row mb-3">
                    <label for="modalinfectionDetails">Infection Details</label>
                    <textarea disabled class="form-control" id="modalinfectionDetails" rows="3" placeholder="Infection Details.."></textarea>
                </div> 
            </div>
        </div>
    </div>

    <!-- The Complication Modal -->
    <div id="complicationModal" class="modal">
        <!-- Modal content -->
        <div class="modal-content modal-complication">
            <div>
                <span id="closeComplicationButton" class="close">&times;</span>
            </div>
            <div class="form-group">    
                <div class="form-row mb-3">
                    <label for="modalComplicationDetails">Complication Details</label>
                    <textarea disabled class="form-control" id="modalComplicationDetails" rows="3" placeholder="Complication Details.."></textarea>
                </div> 
            </div>
        </div>
    </div>
</div>

<script>
    const ajaxManager = new AJAXManager("Coordinator");

    //setup on click listeners for the infection modal
    $(".infectionColumn").on('click', function(e){
        event.stopPropagation();
        event.stopImmediatePropagation();

        if (e.target.innerHTML == "False") {
            return
        }

        //Load the current values
        $("#modalInfectionTitle").val(e.target.innerHTML)
        $("#modalinfectionDetails").val(e.target.getAttribute("data-value"));

        let modal = $("#infectionModal");
        let close = $("#closeButton");
        close.on('click', function () {
            modal.css("display", "none");
        });

        modal.css("display", "block");
    });

    $(".complicationColumn").on('click', function(e){
        event.stopPropagation();
        event.stopImmediatePropagation();

		if (e.target.innerHTML == "No") {
            return
        }

        //Load the current values
        $("#modalComplicationDetails").val(e.target.getAttribute("data-value"));

        let modal = $("#complicationModal");
        let close = $("#closeComplicationButton");
        close.on('click', function () {
            modal.css("display", "none");
        });

        modal.css("display", "block");
    });	

    async function deleteClass(e) {
        let values = e.value.split(":");

        let success = await ajaxManager.deleteASchedule(values[0], values[1]);

        //Remove the class container instead of reloading, slightly better for the user
        if(success !== null) {
            e.parentNode.parentNode.parentNode.remove();
        } 
    }


    //TODO pass in name, date & complications
    //Send an email to just one patient
    async function emailPatient(e) {
        let details = e.parentNode.parentNode.children;

        let date = e.parentNode.parentNode.id;
        let username = details[1].id;
        let name = details[1].innerHTML
        let complication = details[7].innerHTML
        let appointmentRef = e.value

        let success = await ajaxManager.emailPatient(date, username, name, complication, appointmentRef);
        console.log(success);

        //Change button to green
        e.classList.remove("emailButton");
        e.classList.add("emailCompleteButton");
    }

    //Send an email to all the patients detailing a complication to act out
    async function emailAllPatients(e) {
        let scheduleCode = e.value;
        let patientList = {};

        let students = document.getElementsByClassName("studentEntry");

        for (let student of students) {
            let newEntry = {
                "date": student.children[0].innerHTML,
                "username": student.children[0].id,
                "name": student.children[1].value,
                "complication": student.children[7].innerHTML,
                "appointmentRef": student.children[8].children[0].value
            }

            patientList[student.children[1].innerHTML] = newEntry;
        }

        let success = await ajaxManager.emailAllPatients(JSON.stringify(patientList), scheduleCode);

        //Change buttons to green
        for (let student of students) {
            let button = student.children[8].children[0];
            button.classList.remove("emailButton");
            button.classList.add("emailCompleteButton");
        }
    }

    async function alreadyEmailedPatient(e) {
        //Create popup to alert that the patient has already been emailed.
        if (confirm("This user has already been emailed, would you like to re-send?") == true) {
            let details = e.parentNode.parentNode.children;

            let date = e.parentNode.parentNode.id;
            let username = details[1].id;
            let name = details[1].innerHTML;
            let complication = details[7].innerHTML;
            let appointmentRef = e.value;

            let success = await ajaxManager.emailPatient(date, username, name, complication, appointmentRef);
        }
    }

</script>
